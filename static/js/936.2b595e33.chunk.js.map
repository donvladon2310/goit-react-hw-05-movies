{"version":3,"file":"static/js/936.2b595e33.chunk.js","mappings":"+LACA,EAAuB,wBAAvB,EAAsD,wB,SCGzCA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGC,MAAMC,QAAQN,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAWO,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1B,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMX,GAEfE,UAAWC,EACXS,GAAE,kBAAaL,GAJjB,UAME,wBAAKC,GAAQC,KAJRF,EAOV,MAGR,C,iKCtBD,EAAwB,oB,SCwCxB,MAlCA,WACE,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGaK,EAAAA,EAAAA,MAHb,OAGVC,EAHU,OAIhBR,EAAUQ,GAJM,gDAMhBJ,EAAS,KAAIK,SANG,yBAQhBP,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACM,OAAVF,GACJO,EAAAA,OAAAA,QAAA,6BAAqCP,GACtC,GAAE,CAACA,KAGF,iCACE,eAAIhB,UAAWC,EAAf,+BACCa,IAAa,SAACU,EAAA,EAAD,KACd,SAAC5B,EAAA,EAAD,CAAWC,UAAWe,MAG3B,C,yLCrCKa,E,QAAYC,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAINX,EAAS,mCAAG,sGACAK,EAAUO,IAAI,wBADd,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKTC,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAAUO,IAAI,gBAAiB,CACpDJ,OAAQ,CAAEQ,MAAAA,KAFkB,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAe,mCAAG,WAAMhC,GAAN,yFACNoB,EAAUO,IAAV,iBAAwB3B,IADlB,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAO,mCAAG,WAAMjC,GAAN,yFACEoB,EAAUO,IAAV,iBAAwB3B,EAAxB,aADF,uBACb4B,EADa,EACbA,KADa,kBAEdA,EAAKM,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMnC,GAAN,yFACDoB,EAAUO,IAAV,iBAAwB3B,EAAxB,aADC,uBAChB4B,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n  return (\n    <ul className={styles.list}>\n      {Array.isArray(movieList) &&\n        movieList?.map(({ id, name, title }) => {\n          return (\n            <Link\n              state={{ from: location }}\n              key={id}\n              className={styles.item}\n              to={`/movies/${id}`}\n            >\n              <h3>{name || title}</h3>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getTrends } from 'services/API';\nimport styles from './Home.module.css';\n\nfunction Home() {\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await getTrends();\n        setTrends(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrends();\n  }, []);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notify.failure(`some error occured ${error}`);\n  }, [error]);\n\n  return (\n    <>\n      <h2 className={styles.title}>Trends of the day</h2>\n      {isLoading && <Loader />}\n      <MovieList movieList={trends} />\n    </>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst moviesAPI = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '8bd78ee11f1297c9482ff7b548a73f20',\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getTrends = async () => {\n  const { data } = await moviesAPI.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await moviesAPI.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await moviesAPI.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["MovieList","movieList","location","useLocation","className","styles","Array","isArray","map","id","name","title","state","from","to","useState","trends","setTrends","isLoading","setIsLoading","error","setError","useEffect","fetchTrends","getTrends","receivedTrends","message","Notify","Loader","moviesAPI","axios","baseURL","params","api_key","language","include_adult","get","data","results","getMoviesByQuery","query","getMovieDetails","getCast","cast","getReviews"],"sourceRoot":""}